@page "/"

<Container>
    <Modal @ref="_endOfIterationModal">
        <ModalBackdrop/>
        <ModalContent Centered="true">
            <ModalHeader>
                <ModalTitle> End of Iteration @_gameManager.LastIteration.Number</ModalTitle>
                <CloseButton Clicked="@HideEndIterationModal"/>
            </ModalHeader>
            <ModalBody>
                <Container Fluid="true">
                    <Row>
                        @_gameManager.LastIteration.GameCardModel.Scenario
                    </Row>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is6.Is3.WithOffset">
                            @if (_gameManager.LastIteration.GameCardModel.Cost > 0)
                            {
                                <Card class="techdebtcard" Margin="Margin.Is3">
                                    <CardHeader>New Tech Debt</CardHeader>
                                    <CardBody>
                                        <CardText>Cost = @_gameManager.LastIteration.GameCardModel.Cost</CardText>
                                        <CardText>Impact = @_gameManager.LastIteration.GameCardModel.Impact</CardText>
                                    </CardBody>
                                </Card>
                            }

                            else
                            {
                                <Card class="gameCard" Margin="Margin.Is3">
                                    <CardHeader>No new Tech Debt :-)</CardHeader>
                                </Card>
                            }
                        </Column>
                    </Row>
                </Container>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" Clicked="@HideEndIterationModal">Close</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>

    <Row Gutter="(32, 16)">
        <Column>
            <Graphs GameManager="@_gameManager"></Graphs>
        </Column>
    </Row>

    <Row Gutter="(32, 16)">
        <Column ColumnSize="ColumnSize.Is2">
            <div id="iterationCards">
                @if (_gameManager.CurrentIteration.Number < _gameManager.MaxIterations)
                {
                    <Button Color="Color.Primary" Clicked="@EndIteration" Block="true">
                        Next Iteration
                    </Button>
                }
                else if (!_gameManager.GameHasEnded)
                {
                    <Button Color="Color.Danger" Clicked="@EndIteration" Block="true">
                        End Game
                    </Button>
                }
            </div>

        </Column>

        @if (_gameManager.GameHasEnded)
        {
            <Column ColumnSize="ColumnSize.Is12">
                <IterationsTable GameManager="@_gameManager"/>
            </Column>
        }
        else
        {
            <Column ColumnSize="ColumnSize.Is10">
                <IterationsTable GameManager="@_gameManager"/>
            </Column>
        }
    </Row>

    <Divider/>

    <Row Gutter="(32, 16)">
        <Column ColumnSize="ColumnSize.Is12">

            <GameCardListContainer GameManager="@_gameManager" OnStatusUpdated="CardsMoved">
                <Row>
                    <Column ColumnSize="ColumnSize.Is4">
                        <GameCardList GameCardListModel="@_gameManager.OutstandingTechDebtCardList">
                            <Heading Size="HeadingSize.Is5" TextColor="TextColor.Danger">Tech Debt Register</Heading>
                        </GameCardList>
                    </Column>
                    @if (!_gameManager.GameHasEnded)
                    {
                        <Column ColumnSize="ColumnSize.Is4">
                            <GameCardList GameCardListModel="@_gameManager.ProposedForIterationCardList">
                                <Heading Size="HeadingSize.Is4" TextColor="TextColor.Primary">Proposed work for Iteration @_gameManager.CurrentIteration.Number</Heading>
                            </GameCardList>
                        </Column>
                    }
                    else
                    {
                        <Column ColumnSize="ColumnSize.Is4"/>
                    }
                    <Column ColumnSize="ColumnSize.Is4">
                        <GameCardList GameCardListModel="@_gameManager.OutstandingFeaturesCardList">
                            <Heading Size="HeadingSize.Is5" TextColor="TextColor.Secondary">Outstanding Features</Heading>
                        </GameCardList>
                    </Column>
                </Row>
            </GameCardListContainer>
        </Column>
    </Row>
</Container>

@code {
#pragma warning disable 649 //This field is assigned to by Blazor
    private Modal _endOfIterationModal;
#pragma warning restore 649

    private readonly GameManager _gameManager = new GameManager();

    private void ShowEndIterationModal()
    {
        _endOfIterationModal.Show();
    }

    private void HideEndIterationModal()
    {
        _endOfIterationModal.Hide();
    }

    private void EndIteration()
    {
        _gameManager.StartNewIteration();
        if (!_gameManager.GameHasEnded)
        {
            ShowEndIterationModal();
        }
    }

    private void CardsMoved()
    {
        //This forces a repaint
    }

}