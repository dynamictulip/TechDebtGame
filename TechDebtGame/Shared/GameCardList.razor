@using TechDebtGame.Pages
<div>
    @ChildContent

    <ul class="dropzone @dropClass"
        ondragover="event.preventDefault();"
        ondragstart="event.dataTransfer.setData('', event.target.id);"
        @ondrop="HandleDrop"
        @ondragenter="HandleDragEnter"
        @ondragleave="HandleDragLeave">

        @foreach (var card in GameCardListModel.Cards)
        {
            <li class="@cardOverride">
                <GameCard GameCardModel=card />
            </li>
        }

    </ul>
</div>

@code {

    [CascadingParameter]
    GameCardListContainer Container { get; set; }

    [CascadingParameter]
    public GameManager GameManager { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public GameCardListModel GameCardListModel { get; set; }

    string dropClass = "";
    string cardOverride = "";

    public void HandleDragEnter(DragEventArgs dragEventArgs)
    {
        if (GameManager.CanMoveCard(Container.Payload, GameCardListModel))
            dropClass = "can-drop";
        else
        {
            dropClass = "cannot-drop";
            cardOverride = "hide";
        }
    }

    public void HandleDragLeave()
    {
        dropClass = "";
        cardOverride = "";
    }

    private async Task HandleDrop()
    {
        dropClass = "";

        await Container.UpdateCardAsync(GameCardListModel);
    }
}