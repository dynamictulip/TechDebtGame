<Card class="@Style" draggable="true" @ondragstart="HandleDragStart">
    <CardHeader>@(IsTechDebt ? GameCardModel.Scenario : "Feature")</CardHeader>
    <CardBody>
        <CardText>Cost = @GameCardModel.Cost</CardText>
        @if (GameCardModel is TechDebtGameCardModel techDebtGameCardModel)
        {
            <CardText>Impact = @techDebtGameCardModel.Impact</CardText>
        }

        <Button Color="Color.Primary" Clicked="@OnButtonClicked">
            @if (ArrowDirection is Arrow.Left)
            {
                <Icon Name="IconName.ArrowLeft" />
            }
            else
            {
                <Icon Name="IconName.ArrowRight" />
            }
        </Button>
    </CardBody>
</Card>


@code {

    [CascadingParameter]
    GameCardListContainer Container { get; set; }

    [CascadingParameter]
    public GameCardListModel GameCardListModel { get; set; }

    [Parameter]
    public IGameCardModel GameCardModel { get; set; }
    
    [Parameter]
    public Arrow ArrowDirection { get; set; }

    public enum Arrow
    {
        Left,
        Right
    }
    
    [Parameter]
    public string Style
    {
        get => $"{_style ?? ""} gameCard draggable";
        set => _style = value;
    }

    private bool IsTechDebt => GameCardModel is TechDebtGameCardModel;

    protected override void OnParametersSet()
    {
        if (IsTechDebt)
            _style += " techdebtcard";
        else
        {
            _style += " featurecard";
        }
    }

    private async Task OnButtonClicked()
    {
        await Container.MoveCardAsync(GameCardModel, GameCardListModel);
    }

    private void HandleDragStart()
    {
        Container.Payload = GameCardModel;
    }

    private string _style = "";
}